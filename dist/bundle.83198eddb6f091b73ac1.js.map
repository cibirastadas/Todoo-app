{"version":3,"file":"bundle.83198eddb6f091b73ac1.js","mappings":"yBACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAGhB,CAFE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,G,WCAxB,IAAIC,EACAP,EAAoBC,EAAEO,gBAAeD,EAAYP,EAAoBC,EAAEQ,SAAW,IACtF,IAAIC,EAAWV,EAAoBC,EAAES,SACrC,IAAKH,GAAaG,IACbA,EAASC,gBACZJ,EAAYG,EAASC,cAAcC,MAC/BL,GAAW,CACf,IAAIM,EAAUH,EAASI,qBAAqB,UACzCD,EAAQE,SAAQR,EAAYM,EAAQA,EAAQE,OAAS,GAAGH,IAC5D,CAID,IAAKL,EAAW,MAAM,IAAIS,MAAM,yDAChCT,EAAYA,EAAUU,QAAQ,OAAQ,IAAIA,QAAQ,QAAS,IAAIA,QAAQ,YAAa,KACpFjB,EAAoBkB,EAAIX,C,ICfjB,I,oDCQDY,EAAWT,SAASU,cAAc,cAClCC,EAAeX,SAASU,cAAc,yBACzBV,SAASU,cAAc,4BAC/BR,IAAMU,EAEEZ,SAASU,cAAc,kBAuD/BG,iBAAiB,UAtDV,SAACC,GACjBA,EAAMC,iBACN,IAAMC,EAAOhB,SAASU,cAAc,yBAAyBO,MAEvDC,EAAWlB,SAASmB,cAAc,OACxCD,EAASE,UAAUC,IAAI,mBAEvB,IAAMC,EAAYtB,SAASmB,cAAc,SACzCG,EAAUF,UAAUC,IAAI,oBACxBC,EAAUC,KAAO,OACjBD,EAAUL,MAAQD,EAClBM,EAAUE,UAAW,EAErBN,EAASO,YAAYH,GAErB,IAAMI,EAAU1B,SAASmB,cAAc,OACvCO,EAAQN,UAAUC,IAAI,sBAEtB,IAAMM,EAAiB3B,SAASmB,cAAc,UAC9CQ,EAAeP,UAAUC,IAAI,SAAU,gBAAiB,gBACxDM,EAAeJ,KAAO,SACtBI,EAAeC,UAAY,OAE3B,IAAMC,EAAc7B,SAASmB,cAAc,OAC3CU,EAAY3B,IAAM4B,EAClBD,EAAYT,UAAUC,IAAI,uBAAwB,QAClDM,EAAeI,QAAQF,GAEvBF,EAAed,iBAAiB,SAAS,SAAClB,GACxCqC,EAAerC,EAAG2B,EAAWO,EAC/B,IAEA,IAAMI,EAAejC,SAASmB,cAAc,UAC5Cc,EAAab,UAAUC,IAAI,SAAU,cAAe,gBACpDY,EAAaV,KAAO,SACpBU,EAAaL,UAAY,SACzBK,EAAapB,iBAAiB,SAAS,kBAAMqB,EAAahB,EAAS,IAEnE,IAAMiB,EAAYnC,SAASmB,cAAc,OACzCgB,EAAUjC,IAAMkC,EAChBD,EAAUf,UAAUC,IAAI,yBAA0B,QAClDY,EAAaF,QAAQI,GAErBT,EAAQD,YAAYE,GACpBD,EAAQD,YAAYQ,GAEpBf,EAASO,YAAYC,GAErBjB,EAASgB,YAAYP,GAErBP,EAAaM,MAAQ,GACrBoB,MAAM,0BACR,IAIA,IAAMH,EAAe,SAAClB,GACpBP,EAAS6B,YAAYtB,EACvB,EAEMgB,EAAiB,SAACrC,EAAGqB,EAAMc,GAE/B,GADAS,QAAQC,IAAIxB,EAAKQ,WACZR,EAAKQ,SAKR,OAJAR,EAAKQ,UAAW,EAChB7B,EAAE8C,cAAcb,UD7EZ,YC8EJjC,EAAE8C,cAAcV,QAAQD,GAK1Bd,EAAK0B,gBAAgB,YACrB1B,EAAK2B,QACLhD,EAAE8C,cAAcb,UDpFV,MCqFR,C","sources":["webpack://todoo-app/webpack/bootstrap","webpack://todoo-app/webpack/runtime/global","webpack://todoo-app/webpack/runtime/publicPath","webpack://todoo-app/./src/constants/index.js","webpack://todoo-app/./src/features/todoList.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const BUTTON_TEXT = {\n  EDIT: \"Edit\",\n  SAVE: \"Save\",\n  REMOVE: \"Remove\",\n};","import { BUTTON_TEXT } from \"../constants/index.js\";\n\nimport \"../main.css\";\n\nimport editIcon from \"../assets/edit.svg\";\nimport deleteIcon from \"../assets/delete.svg\";\nimport addIcon from \"../assets/add.svg\";\n\nconst taskList = document.querySelector(\".task-list\");\nconst addTaskInput = document.querySelector(\".add-task-form__input\");\nconst addTaskImg = document.querySelector(\".add-task-form__add-icon\");\naddTaskImg.src = addIcon;\n\nconst formSubmit = document.querySelector(\".add-task-form\");\nconst onAddTask = (event) => {\n  event.preventDefault();\n  const task = document.querySelector(\".add-task-form__input\").value;\n\n  const taskItem = document.createElement(\"div\");\n  taskItem.classList.add(\"task-list__item\");\n\n  const taskInput = document.createElement(\"input\");\n  taskInput.classList.add(\"task-list__input\");\n  taskInput.type = \"text\";\n  taskInput.value = task;\n  taskInput.readOnly = true;\n\n  taskItem.appendChild(taskInput);\n\n  const actions = document.createElement(\"div\");\n  actions.classList.add(\"task-list__actions\");\n\n  const buttonComplete = document.createElement(\"button\");\n  buttonComplete.classList.add(\"button\", \"button--green\", \"button--icon\");\n  buttonComplete.type = \"button\";\n  buttonComplete.innerText = \"Edit\";\n\n  const completeImg = document.createElement(\"img\");\n  completeImg.src = editIcon;\n  completeImg.classList.add(\"task-list__edit-icon\", \"icon\");\n  buttonComplete.prepend(completeImg);\n\n  buttonComplete.addEventListener(\"click\", (e) => {\n    onCompleteTask(e, taskInput, completeImg);\n  });\n\n  const buttonDelete = document.createElement(\"button\");\n  buttonDelete.classList.add(\"button\", \"button--red\", \"button--icon\");\n  buttonDelete.type = \"button\";\n  buttonDelete.innerText = \"Delete\";\n  buttonDelete.addEventListener(\"click\", () => onDeleteTask(taskItem));\n\n  const deleteImg = document.createElement(\"img\");\n  deleteImg.src = deleteIcon;\n  deleteImg.classList.add(\"task-list__delete-icon\", \"icon\");\n  buttonDelete.prepend(deleteImg);\n\n  actions.appendChild(buttonComplete);\n  actions.appendChild(buttonDelete);\n\n  taskItem.appendChild(actions);\n\n  taskList.appendChild(taskItem);\n\n  addTaskInput.value = \"\";\n  alert(\"Successfully added task\");\n};\n\nformSubmit.addEventListener(\"submit\", onAddTask);\n\nconst onDeleteTask = (task) => {\n  taskList.removeChild(task);\n};\n\nconst onCompleteTask = (e, task, editIcon) => {\n  console.log(task.readOnly);\n  if (!task.readOnly) {\n    task.readOnly = true;\n    e.currentTarget.innerText = BUTTON_TEXT.EDIT;\n    e.currentTarget.prepend(editIcon);\n\n    return;\n  }\n\n  task.removeAttribute(\"readonly\");\n  task.focus();\n  e.currentTarget.innerText = BUTTON_TEXT.SAVE;\n};\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","taskList","querySelector","addTaskInput","addIcon","addEventListener","event","preventDefault","task","value","taskItem","createElement","classList","add","taskInput","type","readOnly","appendChild","actions","buttonComplete","innerText","completeImg","editIcon","prepend","onCompleteTask","buttonDelete","onDeleteTask","deleteImg","deleteIcon","alert","removeChild","console","log","currentTarget","removeAttribute","focus"],"sourceRoot":""}